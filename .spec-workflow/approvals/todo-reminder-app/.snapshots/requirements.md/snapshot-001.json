{
  "id": "snapshot_1759577550898_vxq5m2e6k",
  "approvalId": "approval_1759577550866_avkz1ez55",
  "approvalTitle": "Approve requirements for todo-reminder-app",
  "version": 1,
  "timestamp": "2025-10-04T11:32:30.898Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# Spec: todo-reminder-app - Requirements\r\n\r\nShort description\r\n- A lightweight, user-friendly Flutter todo & reminder app that lets users create tasks, set one-off or recurring reminders, and receive local notifications. Focus on offline-first reliability, privacy, and accessible UI for mobile (iOS & Android).\r\n\r\nGoals (high level)\r\n- Let users create, edit, and delete todo tasks with title, notes, due date/time, and optional recurrence.\r\n- When a reminder/todo times out, the app should repeatedly read out the reminder/todo every 20 seconds until the user stops it.\r\n - Allow voice input for creating a todo or reminder (speech-to-text), including quick natural commands like \"Remind me to buy milk tomorrow at 9am\"; prefer on-device speech recognition for privacy where available.\r\n- Provide a simple, accessible UI with clear task states (pending, completed, snoozed).\r\n- Persist data locally and optionally export/import as JSON.\r\n\r\nPrimary personas\r\n- Casual user: wants quick, low-friction task creation and reminders.\r\n- Power user: wants recurring reminders, snooze, and basic filtering (today, upcoming, completed).\r\n\r\nUser stories & acceptance criteria\r\n\r\n1) As a user, I can create a task with a title so I can remember something I must do.\r\n  - Acceptance: New task appears in the list with title; createdAt timestamp saved.\r\n\r\n2) As a user, I can add an optional due date/time and set a reminder so I get notified.\r\n  - Acceptance: Local notification is scheduled for the specified date/time and fires on time.\r\n\r\n3) As a user, I can choose recurrence (daily, weekly, monthly) for a task.\r\n  - Acceptance: Recurring reminders re-schedule themselves after firing according to rule.\r\n\r\n4) As a user, I can snooze a reminder for a configurable period.\r\n  - Acceptance: Snooze creates a new one-off reminder for the snooze duration.\r\n\r\n5) As a user, I can mark a task as completed or delete it.\r\n  - Acceptance: Completed tasks can be filtered out and have completedAt timestamp.\r\n\r\n6) As a user, I can view tasks filtered by Today, Upcoming, and Completed.\r\n  - Acceptance: Filters return correct sets based on due date and completed status.\r\n\r\n7) As a user, my tasks persist across app restarts and device reboots.\r\n  - Acceptance: Data stored locally; notifications persist after device reboot (where platform supports it).\r\n\r\n8) As a user, I can create a todo or reminder using voice input so I can add items hands-free.\r\n  - Acceptance: User taps a microphone button, speaks a command (e.g. \"Remind me to buy milk tomorrow at 9am\"), the app offers a parsed task preview with title and due date/time populated; user can confirm to save. Speech-to-text should work on-device where platform supports it, and privacy settings expose whether speech data is processed locally or sent to platform/cloud services.\r\n\r\nNon-functional requirements\r\n- Offline-first: app works without network.\r\n- Privacy: no user data is sent to servers by default.\r\n- Cross-platform: single Flutter codebase for iOS and Android.\r\n- Performance: start-up < 500ms on mid-range devices; scheduling operations fast.\r\n- Accessibility: support large fonts and screen readers.\r\n\r\nConstraints & assumptions\r\n- No cloud sync in initial scope (optional future task).\r\n- Use local persistence (SQLite / Hive) depending on design trade-offs.\r\n- Use Flutter stable (current LTS) and null-safety.\r\n- Use platform notification APIs via well-maintained packages.\r\n\r\nRisks\r\n- Platform differences: Android background restrictions and iOS notification limits.\r\n- Recurrence edge-cases (DST, timezone changes).\r\n\r\nSuccess metrics\r\n- Users can create and receive a scheduled notification in the same session.\r\n- >95% notifications fire on time across test devices (excluding network or OS limitations).\r\n\r\nDeliverables for Requirements phase\r\n- `.spec-workflow/specs/todo-reminder-app/requirements.md` (this file)\r\n",
  "fileStats": {
    "size": 3887,
    "lines": 66,
    "lastModified": "2025-10-04T11:31:54.475Z"
  },
  "comments": []
}